// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WK2018.Data;

namespace WK2018.Migrations
{
    [DbContext(typeof(WKContext))]
    partial class WKContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WK2018.Models.Knockout", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ToernooiID");

                    b.Property<int>("Toernooi_ID");

                    b.Property<string>("Type")
                        .IsRequired();

                    b.HasKey("ID");

                    b.HasIndex("ToernooiID");

                    b.ToTable("KnockoutStages");
                });

            modelBuilder.Entity("WK2018.Models.Poule", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasConversion(new ValueConverter<string, string>(v => default(string), v => default(string), new ConverterMappingHints(size: 1)));

                    b.Property<int>("ToernooiID");

                    b.Property<int>("Toernooi_ID");

                    b.HasKey("ID");

                    b.HasIndex("ToernooiID");

                    b.ToTable("Poules");
                });

            modelBuilder.Entity("WK2018.Models.Score", b =>
                {
                    b.Property<int>("Thuis");

                    b.Property<int>("Uit");

                    b.HasKey("Thuis", "Uit");

                    b.ToTable("Scores");
                });

            modelBuilder.Entity("WK2018.Models.Speler", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DP");

                    b.Property<int>("GK");

                    b.Property<DateTime>("GeboorteDatum");

                    b.Property<string>("Naam")
                        .IsRequired();

                    b.Property<string>("Positie")
                        .IsRequired();

                    b.Property<int>("RK");

                    b.Property<int>("TeamID");

                    b.Property<int>("Team_ID");

                    b.Property<int>("WG");

                    b.HasKey("ID");

                    b.HasIndex("TeamID");

                    b.ToTable("Spelers");
                });

            modelBuilder.Entity("WK2018.Models.Team", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("KnockoutStageID");

                    b.Property<int?>("Knockout_ID");

                    b.Property<string>("Naam")
                        .IsRequired();

                    b.Property<int?>("PouleID");

                    b.Property<int>("Poule_ID");

                    b.Property<int>("Punten");

                    b.HasKey("ID");

                    b.HasIndex("KnockoutStageID");

                    b.HasIndex("PouleID");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("WK2018.Models.Toernooi", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Logo")
                        .IsRequired();

                    b.Property<string>("Naam")
                        .IsRequired();

                    b.HasKey("ID");

                    b.ToTable("Toernooien");
                });

            modelBuilder.Entity("WK2018.Models.Wedstrijd", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Datum");

                    b.Property<int?>("ScoreThuis");

                    b.Property<int?>("ScoreUit");

                    b.Property<int>("Score_Thuis");

                    b.Property<int>("Score_Uit");

                    b.Property<int?>("Team_ThuisID");

                    b.Property<int?>("Team_UitID");

                    b.HasKey("ID");

                    b.HasIndex("Team_ThuisID");

                    b.HasIndex("Team_UitID");

                    b.HasIndex("ScoreThuis", "ScoreUit");

                    b.ToTable("Wedstrijden");
                });

            modelBuilder.Entity("WK2018.Models.Knockout", b =>
                {
                    b.HasOne("WK2018.Models.Toernooi", "Toernooi")
                        .WithMany("KnockoutStages")
                        .HasForeignKey("ToernooiID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WK2018.Models.Poule", b =>
                {
                    b.HasOne("WK2018.Models.Toernooi", "Toernooi")
                        .WithMany("Poules")
                        .HasForeignKey("ToernooiID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WK2018.Models.Speler", b =>
                {
                    b.HasOne("WK2018.Models.Team", "Team")
                        .WithMany("Spelers")
                        .HasForeignKey("TeamID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WK2018.Models.Team", b =>
                {
                    b.HasOne("WK2018.Models.Knockout", "KnockoutStage")
                        .WithMany("Teams")
                        .HasForeignKey("KnockoutStageID");

                    b.HasOne("WK2018.Models.Poule", "Poule")
                        .WithMany("Teams")
                        .HasForeignKey("PouleID");
                });

            modelBuilder.Entity("WK2018.Models.Wedstrijd", b =>
                {
                    b.HasOne("WK2018.Models.Team", "Team_Thuis")
                        .WithMany("ThuisWedstrijden")
                        .HasForeignKey("Team_ThuisID");

                    b.HasOne("WK2018.Models.Team", "Team_Uit")
                        .WithMany("UitWedstrijden")
                        .HasForeignKey("Team_UitID");

                    b.HasOne("WK2018.Models.Score", "Score")
                        .WithMany("Wedstrijden")
                        .HasForeignKey("ScoreThuis", "ScoreUit");
                });
#pragma warning restore 612, 618
        }
    }
}
